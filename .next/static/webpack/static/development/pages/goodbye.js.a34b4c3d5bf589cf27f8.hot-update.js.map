{"version":3,"file":"static/webpack/static/development/pages/goodbye.js.a34b4c3d5bf589cf27f8.hot-update.js","sources":["webpack:///./pages/goodbye.js"],"sourcesContent":["import React from 'react'\nimport Head from 'next/head'\nimport * as THREE from 'three'\nconst colors = [0x0000ff,0x00ff00,0xff0000,0xf0f000,0x00f0f0]\n\nexport default class extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  init() {\n    // SETTING UP SCENE AND PERSPECTIVE MATRIX\n    const self = this\n    const camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 1, 1000)\n    const scene = new THREE.Scene()\n\n    // SETTING UP GEOMETRY AND MATERIAL\n    const icosaedronGeometry1 = new THREE.IcosahedronGeometry(200, 0)\n    const icosaedronGeometry2 = new THREE.IcosahedronGeometry(200, 2)\n    const lineSegmentsGeometry1 = new THREE.EdgesGeometry(icosaedronGeometry1);\n    const lineSegmentsGeometry2 = new THREE.EdgesGeometry(icosaedronGeometry2);\n    const lineSegmentsMaterial = new THREE.LineBasicMaterial({color: 0xffffff, linewidth: 0.5});\n    const mesh1 = new THREE.LineSegments(lineSegmentsGeometry1, lineSegmentsMaterial)\n    const mesh2 = new THREE.LineSegments(lineSegmentsGeometry2, lineSegmentsMaterial)\n\n    //SETTING UP THE RENDERER\n    const renderer = new THREE.WebGLRenderer()\n\n    //SETTING UP CAMERA POSIION\n    camera.position.z = 600\n\n    //ADDING ELEMENTS TO THE SCENE\n    scene.add(mesh1)\n    scene.add(mesh2)\n\n    // SETTING UP PIXEL RATIO AND CANVAS SIZE\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n\n    //APPENDING CANAS TO THE DOM\n    document.getElementById('webgl-wrapper').appendChild(renderer.domElement)\n\n    //ADDING WINDOWS RESIZE EVENT\n    window.addEventListener('resize', this.onWindowResize.bind(this), false)\n\n    //ATTACHING ELEMENTS TO THE STATE SCOPE AND RUNING FIRST ANIMATION FRAME\n    this.setState({\n      camera,\n      scene,\n      renderer,\n      mesh1,\n      mesh2\n    }, animate)\n\n    function animate(t) {\n      let rotationangle = t * 0.001\n      requestAnimationFrame(animate)\n      self.state.mesh1.quaternion.setFromEuler(new THREE.Euler(rotationangle, rotationangle * 3, 0))\n      self.state.mesh1.position.x = 250 * Math.sin(rotationangle)\n      self.state.mesh1.position.y = 250 * Math.sin(-rotationangle*2)\n      self.state.mesh1.position.z = 200 * Math.sin(rotationangle*2.5)\n      self.state.mesh1.material.color.setHex(colors[Math.floor(Math.random()*colors.length)])\n      self.state.mesh2.quaternion.setFromEuler(new THREE.Euler(rotationangle, rotationangle * 3, 0))\n      self.state.mesh2.position.x = 250 * Math.sin(-rotationangle)\n      self.state.mesh2.position.y = 250 * Math.sin(rotationangle*2)\n      self.state.mesh2.position.z = 200 * Math.sin(-rotationangle*2.5)\n      self.state.mesh2.material.color.setHex(colors[Math.floor(Math.random()*colors.length)])\n      self.state.renderer.render(self.state.scene, self.state.camera)\n    }\n\n  }\n\n  onWindowResize() {\n    this.state.camera.aspect = window.innerWidth / window.innerHeight\n    this.state.camera.updateProjectionMatrix()\n    this.state.renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Head>\n          <link rel=\"stylesheet\" type=\"text/css\" href=\"/static/styles/goodbye.css\"/>\n        </Head>\n        <div id=\"webgl-wrapper\"></div>\n        <div className=\"magical-text-wrapper\">\n          <h1 className=\"animated fadeIn magical-text\">Get things done, make things better.</h1>\n        </div>\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AAEA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA3FA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}